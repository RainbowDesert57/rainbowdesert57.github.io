*,
*:after,
*:before {
	box-sizing: border-box;
}
html {
  scroll-behavior: auto !important;
}
* {
  font-family: "JetBrains Mono", monospace;
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
  /* color: rgb(198, 208, 245); */
  margin: 0;
}
:root {
  --x: 0;
	--y: 0;
	--xp: 0;
	--yp: 0;
	--hue: calc(0 + (var(--xp) * 500));
	--bg: hsl(0 0% 10%);
	--size: 100px;
	--glow: radial-gradient(50% 50% at center,
			hsl(var(--hue) 80% 85%),
			hsl(var(--hue) 80% 70%),
			transparent) calc((var(--x) * 1px) - (var(--size) * 0.5)) calc((var(--y) * 1px) - (var(--size) * 0.5)) / var(--size) var(--size) no-repeat fixed;
}
body {
  /* background-color: rgb(12, 12, 12); */
  background: transparent;
  margin: 0;
}
#pageBg {
  background-image: url(./MistyTrees.jpg);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-size: cover;
  z-index: -99999;
}
#pageBg::before {
/* This pseudo-element creates the tint overlay */
content: '';
position: absolute;
top: 0;
right: 0;
bottom: 0;
left: 0;
/* Your tint color */
background-color: rgba(13, 21, 31, 0.3);
z-index: -99998;
/* backdrop-filter: blur(24px) saturate(130%); */
/* background-color: rgba(0, 0, 0, 0.3); */
backdrop-filter: blur(45px);
}
/* page1 */
#page1 {
  color: rgb(198, 208, 245);
  overflow-x: hidden;
  margin: 0;
  display: flex;
  height: 100vh;
  width: 100%;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  background: transparent;
}
/* Button */
#buttonContainer {
  margin-top: 10vh;
  flex: 0.7;
  flex-direction: column;
  display: grid;
  width: 100%;
  justify-content: center;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
}
.languageButton {
  font-size: 20px;
  padding: 5%;
  border: none;
  /* background-color: rgb(202, 158, 230); */
  background-color: transparent;
  backdrop-filter: blur(15px);
  border-radius: 10px;
  border: white solid 1px;
  margin: 5px;
  transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out;
  color: rgb(240, 240, 240);
  /* animation: appear 0.5s ease-in-out; */
}
.languageButton:hover {
  box-shadow: 0px 0px 5px 5px rgba(149, 45, 214, 0.37);
  transform: scale(1.05) translateY(-2px);
  cursor: pointer;
}
.languageButton:active {
  transform: scale(1.03) translateY(-10%);
}
#cppButton {
  animation: appear 0.5s ease-in-out forwards;
  animation-delay: 0.5s;
  opacity: 0;
}
#jsButton {
  animation: appear 0.5s ease-in-out forwards;
  animation-delay: 0.5s;
  opacity: 0;
}
#cssButton {
  animation: appear 0.5s ease-in-out forwards;
  animation-delay: 0.7s;
  opacity: 0;
}
#htmlButton {
  animation: appear 0.5s ease-in-out forwards;
  animation-delay: 0.7s;
  opacity: 0;
}
#electronButton {
  animation: appear 0.7s ease-in-out forwards;
  animation-delay: 0.9s;
  opacity: 0;
}
#buttonText {
  font-size: 30px;
  font-weight: 600;
  text-align: center;
  color: rgb(240, 240, 240);
  animation: appear 0.5s ease-in-out forwards;
  animation-delay: 0.3s;
  margin-top: 7px;
  opacity: 0;
}
#introContainer {
  border-radius: 7px;
  margin-top: 10vh;
  margin-left: 3%;
  flex: 1;
  text-align: center;
  position: relative;
  background-color: rgb(30, 30, 30);
}
/* animated border */
/* custom property */
@property --borderAngle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}
#introContainer::after, #introContainer::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  z-index: -1;
  padding: 5px;
  border-radius: 10px;
  background: conic-gradient(
    from var(--borderAngle),
    rgb(149, 45, 214),
    transparent,
    transparent,
    /* black, */
    /* black, */
    rgb(149, 45, 214),
    /* rgb(149, 45, 214), */
    transparent,
    transparent,
    /* black, */
    /* black, */
    rgb(149, 45, 214)
  );
  animation: borderAnimation 5s linear infinite;
  /* filter: blur(7px);
  opacity: 0.5; */
}
#introContainer::before {
  filter: blur(20px);
  opacity: 1;
}
#name {
  margin-top: 40px;
  width: 100%;
  animation: appear 0.5s ease-in-out;
  font-size: 40px;
  color: rgb(198, 208, 245);
}
.nameName {
  color: white;
  text-shadow: 0px 0px 10px rgb(174, 45, 255);
}
.description {
  animation: appear 0.5s ease-in-out;
  font-size: 25px;
  color: rgb(198, 208, 245);
}
#descSmall {
  font-size: 25px;
}
.changeFontSize {
  font-size: 25px;
  margin-bottom: 20px;
}
/* blinking cursor */
#nameTypewriter {
  animation: typeWriter 1s steps(14) forwards;
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#nameTypewriter2 {
  animation: typeWriter 1s steps(13) forwards 1s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#keepCursor {
  white-space: nowrap;
  display: inline-block;
}
#nameHideCursor1 {
  animation: hide 1s steps(1) forwards;
  opacity: 0;
}
#nameHideCursor2 {
  animation: hide 1s steps(1) forwards 1s;
  opacity: 0;
}
#cursorBlinkDelayed {
  animation: hide 2s steps(1) forwards 5.5s, blink 1s steps(1) infinite forwards 7.5s;
  opacity: 0;
}
#descTypewriter1 {
  animation: typeWriter 2s steps(41) forwards 2s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#descTypewriter2 {
  animation: typeWriter 1.5s steps(31) forwards 4s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#descTypewriter3 {
  animation: typeWriter 2s steps(23) forwards 5.5s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#descSmall {
  font-size: 14px;
}
#hideCursorDelayed {
  animation: hide 1s steps(1) forwards 1s;
  opacity: 0;
}
#hideCursorDelayedDesc1 {
  animation: hide 2s steps(1) forwards 2s;
  opacity: 0;
}
#hideCursorDelayedDesc2 {
  animation: hide 1.5s steps(1) forwards 4s;
  opacity: 0;
}

/* DOCK */
#dock {
  position: fixed;
  bottom: 3%;
  left: 50%;
  transform: translateX(-50%);
  height: 90px;
  display: flex;
  flex-direction: row;
  flex-basis: 1;
  background: rgba(255, 255, 255, 0.001);
  /* box-shadow: inset 0 5px 15px rgba(255, 255, 255, 0.2),
              inset 0 -5px 15px rgba(0, 0, 0, 0.15),
              0 4px 30px rgba(0, 0, 0, 0.2); */
  /* background: grey; */
  backdrop-filter: blur(12px);
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  transition: width 0.5s ease-in-out, height 0.3s ease-in-out, transform 0.3s ease-in-out;
  z-index: 1000;
  width: auto;
  border: rgba(255, 255, 255, 0.18) solid 1px;
}
#dock:hover {
  transform: scale(1.1) translateX(-47.5%);
}
.dockItem {
  height: 75px;
  width: 75px;
  background: transparent;
  backdrop-filter: blur(15px);
  box-shadow: inset 0 5px 15px rgba(255, 255, 255, 0.02),
              inset 0 -5px 15px rgba(0, 0, 0, 0.015),
              0 4px 30px rgba(0, 0, 0, 0.02);
  border-radius: 10px;
  border: none;
  transition: transform 0.3s ease-in-out, background 0.3s ease-in-out, width 0.3s ease-in-out;
  background: rgba(255, 255, 255, 0.00);
  margin: 5px;
}
.dockItem:hover {
  cursor: pointer;
  transform: scale(1.1) translateY(-7px);
}
.dockItem.clicked {
  animation: dockBounce 0.8s ease-in-out infinite;
}
.dockIcon {
  height: 90%;
  width: 90%;
  object-fit: scale-down;
}
#discordIcon {
  object-fit: cover;
}
#githubIcon {
  background-image: url("https://cdn-icons-png.flaticon.com/512/25/25231.png");
  height: 45%;
}
#myJourneyIcon {
  filter: invert(1);
}
#page2 {
  /* height: 100vh; */
  border-radius: 10px;
  text-align: center;
  overflow-x: hidden;
}
#page2Heading {
  color: white;
  opacity: 0;
  font-size: 50px;
}
#page2Heading.visible {
  animation: pop 0.4s ease-in-out forwards;
}
#page2Heading.hidden {
  animation: scaleDown 1s ease-in-out;
}
#cardContainer {
  display: grid;
  grid-template-columns: 33.3% 33.3% 33.3%;
  grid-template-rows: auto;
  opacity: 0;
}
#cardContainer.visible {
  opacity: 1;
  animation: fadeIn 0.5s ease-in-out;
}
#cardContainer.hidden {
  opacity: 0;
  animation: fadeOut 0.4s ease-in-out;
}
.card {
  background: rgba(40, 40, 40, 0.05);
  backdrop-filter: blur(10px);
  border-radius: 10px;
  margin: 10px;
  color: rgba(255, 255, 255, 0.1);
  transform-style: preserve-3d;
  transform: perspective(10000px);
  height: 95%;
  padding: 20px;
}
.cardText {
  transform: translateZ(20px);
  font-size: 17px;
  text-shadow: 0px 0px 3px white;
  color: white;
}
.cardTechContainer {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  transform: translateZ(20px);
}
.techButton {
  transform: translateZ(200px);
  border: rgba(255, 255, 255, 0.1) solid 0.005px;
  background-color: transparent;
  backdrop-filter: blur(10px);
  border-radius: 5px;
  color: white;
  transition: all 0.3s ease-in-out;
  margin: 2px;
}
.techButton:hover {
  cursor: pointer;
  scale: 1.03;
  transform: translateY(-3px) translateZ(200px);
}
#techButton1-4 {
  width: 200%;
}
.cardImage {
  width: 80%;
  border-radius: 5px;
  transform: translateZ(20px);
}
.cardTitle {
  transform: translateZ(20px);
  /* font-size: 12px; */
  color: white;
  text-shadow: 0px 0px 5px white;
  font-size: 30px;
}
/* 3d slider */
#page3 {
  text-align: center;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  opacity: 0;
}
#page3.visible {
  opacity: 1;
  animation: fadeIn 0.5s ease-in-out;
}
#page3.hidden {
  opacity: 0;
  animation: fadeOut 0.5s ease-in-out;
}
#page3 h1 {
  margin-top: 20px;
  color: white;
  font-size: 70px;
  z-index: -10;
  padding-top: 50px;
}
.banner {
  top: 100px;
  width: 100%;
  height: 100vh;
  text-align: center;

  position: relative;
  border-radius: 10px;
  backface-visibility: visible;
  -webkit-backface-visibility: visible;
}
.banner .slider {
  backface-visibility: visible;
  -webkit-backface-visibility: visible;
  position: absolute;
  width: 200px;
  height: 225px;
  /* NOTE: */
  top: 10%;
  left: calc(50% - 100px);
  transform-style: preserve-3d;
  transform: perspective(2000px);
  animation: autoRun 20s linear infinite;
  z-index: 2;
  border-radius: 10px;
  -moz-osx-font-smoothing: grayscaled;
}
.banner .slider:hover {
  animation-play-state: paused;
}
.banner .slider .item {
    position: absolute;
    inset: 0 0 0 0;
    transform:
    rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg))
    translateZ(450px);
    border-radius: 10px;
    perspective: 2000px;
    transform-style: preserve-3d;
    will-change: transform;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    backface-visibility: visible;
    -webkit-backface-visibility: visible;
    -moz-osx-font-smoothing: grayscaled;
}
.banner .slider .item .projectDisplay{
    color: rgb(198, 208, 245);
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 10px;
    background: linear-gradient(to bottom, rgba(219, 146, 255, 0.1), rgba(255, 255, 255, 0.0));
    /* backdrop-filter: blur(10px); */
    transition: scale 0.3s ease-in-out, transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    transform-style: preserve-3d;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    backface-visibility: visible;
    -webkit-backface-visibility: visible;
}
.banner .slider .item .projectDisplay:hover{
  scale: 1.05;
  transform: translateY(-20px);
  box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.75);
  backface-visibility: visible;
  -webkit-backface-visibility: visible;
}
.banner .slider .item .projectDisplay img {
    width: 100%;
    object-fit: cover;
    border-radius: 5px;
    backface-visibility: hidden;
    transform-style: preserve-3d;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    backface-visibility: visible;
    -webkit-backface-visibility: visible;
}
.timelineDate {
  color: rgba(140, 0, 255, 0.059) !important;
  font-size: 22px;
  font-weight: 700;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-stroke: 0.5px white;
  text-rendering: optimizeLegibility;
  backface-visibility: visible;
  -webkit-backface-visibility: visible;
  /* Optional fallback for non-WebKit browsers: */
  /* text-shadow:
    -1px -1px 0 #fff,
     1px -1px 0 #fff,
    -1px  1px 0 #fff,
     1px  1px 0 #fff; */
}
@keyframes autoRun{
    from{
        transform: perspective(1000px) rotateX(-7deg) rotateY(360deg);
    }to{
        transform: perspective(1000px) rotateX(-10deg) rotateY(0deg);
    }
}
@media screen and (max-width: 1023px) {
    .banner .slider{
        width: 160px;
        height: 200px;
        left: calc(50% - 80px);
    }
    .banner .slider .item{
        transform:
            rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg))
            translateZ(300px);
    }
}
@media screen and (max-width: 767px) {
    .banner .slider{
        width: 100px;
        height: 150px;
        left: calc(50% - 50px);
    }
    .banner .slider .item{
        transform:
            rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg))
            translateZ(180px);
    }
}
#page4 {
  text-align: center;
  width: 100vw;
}
.mainGlowHeading {
  font-size: 60px;
  color: white;
  text-shadow: 0px 1px 0px 3px rgb(212, 221, 255);
  padding: 20px;
  padding-top: 50px;
}
.controls {
	position: fixed;
	top: 2rem;
	right: 2rem;
}
.techStackContainer {
	display: flex;
	place-items: center;
	gap: 1rem;
	flex-wrap: wrap;
	justify-content: center;
  margin-top: 20px;
}
.techStackButton {
	border-radius: 1rem;
	text-transform: uppercase;
	font-weight: bold;
	letter-spacing: 0.1ch;
	background: var(--bg);
	border: 4px solid transparent;
	box-shadow: 0 1px hsl(0 0% 100% / 0.15) inset;
	cursor: pointer;
	background:
		linear-gradient(var(--bg), var(--bg)) padding-box,
		var(--glow),
		linear-gradient(black, black) border-box;
	transition: background-size 0.24s;
	touch-action: none;
	position: relative;
	padding: 1rem 2rem;
}
.techStackButtonutton::before {
	content: "";
	position: absolute;
	inset: 0;
	box-shadow: 0 1px hsl(0 0% 100% / 0.15) inset;
	background: var(--bg);
	z-index: 2;
	border-radius: 1rem;
}
.techStackButton span {
	background: var(--glow), black;
	background-clip: text;
	color: transparent;
	height: 100%;
	width: 100%;
	z-index: 2;
	position: relative;
	inset: 0;
}
:root:has(button:active) {
	--size: 300px;
}
.techStackButton::after {
	content: "";
	position: absolute;
	inset: -4px;
	filter: blur(20px);
	border: 4px solid transparent;
	background: var(--glow);
	border-radius: 1rem;
}
/* using hide animation: after how many second to hide -> duration, after how many seconds to show -> delay */
/* using show animation: after how many seconds to show -> duration, delay is useless, it does the same stuff as duration */
/* TIP: use delay for typewriter animation same as the delay for animation: hide; */
@keyframes show {
  from {
    opacity: 0;
  }
  to {
  opacity: 1;
  }
}
@keyframes typeWriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}
@keyframes hide {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}
@keyframes borderAnimation {
  0% {
    --borderAngle: 0deg;
  }
  100% {
    --borderAngle: 360deg;
  }
}
@keyframes appear {
  0% {
    opacity: 0;
    transform: translateY(30px);
    scale: 0.95;
    filter: blur(5px);
  }
  60% {
    transform: translateY(-10px);
    opacity: 1;
    filter: blur(0px);
    scale: 1.01;
  }
  65% {
    transform: translateY(-10px);
    opacity: 1;
    filter: blur(0px);
    scale: 1.01;
  }
  100% {
    opacity: 1;
    transform: translateY(0);
    scale: 1;
    filter: blur(0);
  }
}
@keyframes dockBounce {
  0% {
    transform: scale(1.1) translateY(-7px);
  }
  50% {
    transform: scale(1.1) translateY(-20px);
  }
  100% {
    transform: scale(1.1) translateY(-7px);
  }
}
@keyframes pop {
  0% {
    opacity: 0;
    scale: 0;
  }
  70% {
    opacity: 0.7;
    scale: 1;
  }
  85% {
    opacity: 1;
    scale: 1.05;
  }
  100% {
    opacity: 1;
    scale: 1;
  }
}
@keyframes scaleDown {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.001;
  }
}
@keyframes scaleUp {
  from {
    scale: 0;
  }
  to {
    scale: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
