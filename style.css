html {
  scroll-behavior: smooth;
}
* {
  font-family: "JetBrains Mono", monospace;
  font-optical-sizing: auto;
  font-weight: 600;
  font-style: normal;
  /* color: rgb(198, 208, 245); */
  margin: 0;
}
body {
  background-color: rgb(12, 12, 12);
  margin: 0;
}
/* page1 */
#page1 {
  color: rgb(198, 208, 245);
  overflow-x: hidden;
  margin: 0;
  display: flex;
  height: 100vh;
  width: 100%;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  background: transparent;
}
/* Button */
#buttonContainer {
  margin-top: 10vh;
  flex: 0.7;
  flex-direction: column;
  display: grid;
  width: 100%;
  justify-content: center;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
}
.languageButton {
  font-size: 20px;
  padding: 5%;
  border: none;
  /* background-color: rgb(202, 158, 230); */
  background-color: transparent;
  backdrop-filter: blur(10px) saturate(300%);
  border-radius: 10px;
  border: white solid 1px;
  margin: 5px;
  transition: box-shadow 0.3s ease-in-out, transform 0.3s ease-in-out;
  color: rgb(240, 240, 240);
  animation: appear 0.5s ease-in-out;
}
.languageButton:hover {
  box-shadow: 0px 0px 5px 5px rgba(149, 45, 214, 0.37);
  transform: scale(1.05) translateY(-2px);
  cursor: pointer;
}
.languageButton:active {
  transform: scale(1.03) translateY(-10%);
}
#buttonText {
  font-size: 30px;
  font-weight: 600;
  text-align: center;
  color: rgb(240, 240, 240);
  animation: appear 0.5s ease-in-out;
  margin-top: 7px;
}
#introContainer {
  border-radius: 10px;
  margin-top: 10vh;
  margin-left: 3%;
  flex: 1;
  text-align: center;
  position: relative;
  background-color: rgb(30, 30, 30);
}
/* animated border */
/* custom property */
@property --borderAngle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}
#introContainer::after, #introContainer::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  z-index: -1;
  padding: 2px;
  border-radius: 10px;
  background: conic-gradient(
    from var(--borderAngle),
    rgb(149, 45, 214),
    black,
    black,
    /* black, */
    /* black, */
    rgb(149, 45, 214),
    /* rgb(149, 45, 214), */
    black,
    black,
    /* black, */
    /* black, */
    rgb(149, 45, 214)
  );
  animation: borderAnimation 5s linear infinite;
  /* filter: blur(7px);
  opacity: 0.5; */
}
#introContainer::before {
  filter: blur(15px);
  opacity: 1;
}
#name {
  margin-top: 40px;
  width: 100%;
  animation: appear 0.5s ease-in-out;
  font-size: 40px;
  color: rgb(198, 208, 245);
}
.description {
  animation: appear 0.5s ease-in-out;
  font-size: 25px;
  color: rgb(198, 208, 245);
}
#descSmall {
  font-size: 25px;
}
.changeFontSize {
  font-size: 25px;
  margin-bottom: 20px;
}
/* blinking cursor */
#nameTypewriter {
  animation: typeWriter 1s steps(14) forwards;
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#nameTypewriter2 {
  animation: typeWriter 1s steps(13) forwards 1s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#keepCursor {
  white-space: nowrap;
  display: inline-block;
}
#nameHideCursor1 {
  animation: hide 1s steps(1) forwards;
  opacity: 0;
}
#nameHideCursor2 {
  animation: hide 1s steps(1) forwards 1s;
  opacity: 0;
}
#cursorBlinkDelayed {
  animation: hide 2s steps(1) forwards 5.5s, blink 1s steps(1) infinite forwards 7.5s;
  opacity: 0;
}
#descTypewriter1 {
  animation: typeWriter 2s steps(41) forwards 2s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#descTypewriter2 {
  animation: typeWriter 1.5s steps(31) forwards 4s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#descTypewriter3 {
  animation: typeWriter 2s steps(23) forwards 5.5s;
  width: 0;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}
#descSmall {
  font-size: 14px;
}
#hideCursorDelayed {
  animation: hide 1s steps(1) forwards 1s;
  opacity: 0;
}
#hideCursorDelayedDesc1 {
  animation: hide 2s steps(1) forwards 2s;
  opacity: 0;
}
#hideCursorDelayedDesc2 {
  animation: hide 1.5s steps(1) forwards 4s;
  opacity: 0;
}

/* DOCK */
#dock {
  position: fixed;
  bottom: 3%;
  left: 50%;
  transform: translateX(-50%);
  height: 90px;
  display: flex;
  flex-direction: row;
  flex-basis: 1;
  background: rgba(255, 255, 255, 0.005);
  /* background: grey; */
  backdrop-filter: blur(10px) saturate(200%);
  justify-content: center;
  align-items: center;
  border-radius: 10px;
  transition: width 0.5s ease-in-out, height 0.3s ease-in-out, transform 0.3s ease-in-out;
  z-index: 1000;
  width: auto;
  border: rgba(255, 255, 255, 0.18) solid 0.1px;
}
#dock:hover {
  transform: scale(1.1) translateX(-47.5%);
}
.dockItem {
  height: 75px;
  width: 75px;
  background: transparent;
  backdrop-filter: blur(10px) saturate(200%);
  border-radius: 10px;
  border: none;
  transition: transform 0.3s ease-in-out, background 0.3s ease-in-out, width 0.3s ease-in-out;
  background: rgba(255, 255, 255, 0.005);
  margin: 5px;
}
.dockItem:hover {
  cursor: pointer;
  transform: scale(1.1) translateY(-7px);
}
.dockItem.clicked {
  animation: dockBounce 0.8s ease-in-out infinite;
}
.dockIcon {
  height: 90%;
  width: 90%;
  object-fit: scale-down;
}
#discordIcon {
  object-fit: cover;
}
#githubIcon {
  background-image: url("https://cdn-icons-png.flaticon.com/512/25/25231.png");
  height: 45%;
}
#myJourneyIcon {
  filter: invert(1);
}
#page2 {
  /* height: 100vh; */
  border-radius: 10px;
  text-align: center;
  height: 100vh;
  overflow-x: hidden;
}
#page2Heading {
  color: white;
  opacity: 0;
}
#page2Heading.visible {
  animation: pop 0.4s ease-in-out forwards;
}
#page2Heading.hidden {
  animation: scaleDown 1s ease-in-out;
}
#cardContainer {
  height: 85%;
  display: grid;
  grid-template-columns: 33.3% 33.3% 33.3%;
  grid-template-rows: auto;
}
.card {
  background: rgba(40, 40, 40, 0.05);
  backdrop-filter: blur(10px) saturate(200%);
  border-radius: 10px;
  margin: 10px;
  color: rgba(255, 255, 255, 0.1);
  transform-style: preserve-3d;
  transform: perspective(10000px);
  height: 95%;
}
.cardText {
  transform: translateZ(20px);
  font-size: 17px;
  text-shadow: 0px 0px 3px white;
  color: white;
}
.cardTechContainer {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  transform: translateZ(20px);
}
.techButton {
  transform: translateZ(200px);
  border: rgba(255, 255, 255, 0.1) solid 0.005px;
  background-color: transparent;
  backdrop-filter: blur(10px) saturate(300%);
  border-radius: 5px;
  color: white;
  transition: all 0.3s ease-in-out;
  margin: 2px;
}
.techButton:hover {
  cursor: pointer;
  scale: 1.03;
  transform: translateY(-3px) translateZ(200px);
}
#techButton1-4 {
  width: 200%;
}
.cardImage {
  width: 80%;
  border-radius: 5px;
  transform: translateZ(20px);
}
.cardTitle {
  transform: translateZ(20px);
  /* font-size: 12px; */
  color: white;
  text-shadow: 0px 0px 5px white;
  font-size: 30px;
}
/* 3d slider */
#page3 {
  text-align: center;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
#page3 h1 {
  margin-top: 20px;
}
.banner {
  top: 100px;
  width: 100%;
  height: 100vh;
  text-align: center;
  overflow-x: hidden;
  overflow-y:inherit;
  position: relative;
  border-radius: 10px;
}
.banner .slider {
  position: absolute;
  width: 200px;
  height: 225px;
  /* NOTE: */
  top: 10%;
  left: calc(50% - 100px);
  transform-style: preserve-3d;
  transform: perspective(1000px);
  animation: autoRun 20s linear infinite;
  z-index: 2;
  border-radius: 10px;
}
.banner .slider:hover {
  animation-play-state: paused;
}
.banner .slider .item {
    position: absolute;
    inset: 0 0 0 0;
    transform: 
    rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg))
    translateZ(450px);
    border-radius: 10px;
}
.banner .slider .item .projectDisplay{
    color: rgb(198, 208, 245);
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 10px;
    background: linear-gradient(to bottom, rgba(219, 146, 255, 0.1), rgba(255, 255, 255, 0.0));
    /* backdrop-filter: blur(10px); */
    transition: scale 0.3s ease-in-out, transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
}
.banner .slider .item .projectDisplay:hover{
  scale: 1.05;
  transform: translateY(-20px);
  box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.75);
}
.banner .slider .item .projectDisplay img {
    width: 100%;
    object-fit: cover;
    border-radius: 5px;
}
.timelineDate {
  color: rgba(140, 0, 255, 0.059) !important;
  -webkit-text-stroke: 0.5px white;
  /* Optional fallback for non-WebKit browsers: */
  /* text-shadow:
    -1px -1px 0 #fff,
     1px -1px 0 #fff,
    -1px  1px 0 #fff,
     1px  1px 0 #fff; */
}
@keyframes autoRun{
    from{
        transform: perspective(1000px) rotateX(-5deg) rotateY(360deg);
    }to{
        transform: perspective(1000px) rotateX(-5deg) rotateY(0deg);
    }
}
@media screen and (max-width: 1023px) {
    .banner .slider{
        width: 160px;
        height: 200px;
        left: calc(50% - 80px);
    }
    .banner .slider .item{
        transform: 
            rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg))
            translateZ(300px);
    }
}
@media screen and (max-width: 767px) {
    .banner .slider{
        width: 100px;
        height: 150px;
        left: calc(50% - 50px);
    }
    .banner .slider .item{
        transform: 
            rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg))
            translateZ(180px);
    }
}
/* using hide animation: after how many second to hide -> duration, after how many seconds to show -> delay */
/* using show animation: after how many seconds to show -> duration, delay is useless, it does the same stuff as duration */
/* TIP: use delay for typewriter animation same as the delay for animation: hide; */
@keyframes show {
  from {
    opacity: 0;
  }
  to {
  opacity: 1;
  }
}
@keyframes typeWriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}
@keyframes hide {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}
@keyframes borderAnimation {
  0% {
    --borderAngle: 0deg;
  }
  100% {
    --borderAngle: 360deg;
  }
}
@keyframes appear {
  0% {
    opacity: 0;
    transform: translateY(30px);
    scale: 0.95;
    filter: blur(5px);
  }
  60% {
    transform: translateY(-10px);
    opacity: 1;
    filter: blur(0px);
    scale: 1.01;
  }
  65% {
    transform: translateY(-10px);
    opacity: 1;
    filter: blur(0px);
    scale: 1.01;
  }
  100% {
    opacity: 1;
    transform: translateY(0);
    scale: 1;
    filter: blur(0);
  }
}
@keyframes dockBounce {
  0% {
    transform: scale(1.1) translateY(-7px);
  }
  50% {
    transform: scale(1.1) translateY(-20px);
  }
  100% {
    transform: scale(1.1) translateY(-7px);
  }
}
@keyframes pop {
  0% {
    opacity: 0;
    scale: 0;
  }
  70% {
    opacity: 0.7;
    scale: 1;
  }
  85% {
    opacity: 1;
    scale: 1.05;
  }
  100% {
    opacity: 1;
    scale: 1;
  }
}
@keyframes scaleDown {
  to {
    width: 0;
    opacity: 0;
  }
}
@keyframes scaleUp {
  from {
    scale: 0;
  }
  to {
    scale: 1;
  }
}
@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}